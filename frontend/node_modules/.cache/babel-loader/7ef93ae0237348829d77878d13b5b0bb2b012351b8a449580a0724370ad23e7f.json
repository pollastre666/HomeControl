{"ast":null,"code":"import{BrowserRouter as Router,Route,Routes,useLocation}from'react-router-dom';import Home from'./Containers/Paginas/HomePage';// Asegúrate de que esta importación sea correcta\nimport{AnimatePresence}from'framer-motion';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AnimatedRoutes(){const location=useLocation();return/*#__PURE__*/_jsx(AnimatePresence,{children:/*#__PURE__*/_jsxs(Routes,{location:location,children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),\"  \"]},location.pathname)});}export default AnimatedRoutes;","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useLocation","Home","AnimatePresence","jsx","_jsx","jsxs","_jsxs","AnimatedRoutes","location","children","path","element","pathname"],"sources":["C:/Users/wanom/DAM2/HomeControlM/HomeControl/frontend/src/Routes.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Home from './Containers/Paginas/HomePage';  // Asegúrate de que esta importación sea correcta\n\nimport { AnimatePresence } from 'framer-motion';\n\nfunction AnimatedRoutes() {\n  const location = useLocation();\n\n  return (\n    <AnimatePresence>\n      <Routes location={location} key={location.pathname}>\n        {/* Error Display */}\n\n        {/* Home Display */}\n        <Route path=\"/\" element={<Home />} />  {/* Cambié HomePage por Home aquí */}\n      </Routes>\n    </AnimatePresence>\n  );\n}\n\nexport default AnimatedRoutes;\n"],"mappings":"AAAA,OAASA,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CACtF,MAAO,CAAAC,IAAI,KAAM,+BAA+B,CAAG;AAEnD,OAASC,eAAe,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9B,mBACEI,IAAA,CAACF,eAAe,EAAAO,QAAA,cACdH,KAAA,CAACP,MAAM,EAACS,QAAQ,CAAEA,QAAS,CAAAC,QAAA,eAIzBL,IAAA,CAACN,KAAK,EAACY,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEP,IAAA,CAACH,IAAI,GAAE,CAAE,CAAE,CAAC,KAAE,GAJRO,QAAQ,CAACI,QAKlC,CAAC,CACM,CAAC,CAEtB,CAEA,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}